// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Simt.DAL;

#nullable disable

namespace Simt.DAL.Migrations
{
    [DbContext(typeof(SimtDbContext))]
    partial class SimtDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Simt.DAL.entities.LineEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Traction")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5379bcb7-31e9-4793-9d0d-7a19dd3ad670"),
                            Line = "1",
                            Traction = 1
                        },
                        new
                        {
                            Id = new Guid("5071e9a1-bed6-4a35-af59-47e26e152d99"),
                            Line = "20",
                            Traction = 0
                        });
                });

            modelBuilder.Entity("Simt.DAL.entities.PlayerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Cng")
                        .HasColumnType("REAL");

                    b.Property<float>("Fuel")
                        .HasColumnType("REAL");

                    b.Property<int>("GameMoney")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KmOverall")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KmYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastLogin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengersCarried")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointsGained")
                        .HasColumnType("INTEGER");

                    b.Property<float>("ServisSpending")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7dafd70-b9cb-445c-a7d5-d8443b95f9d2"),
                            Cng = 0f,
                            Fuel = 0f,
                            GameMoney = 0,
                            KmOverall = 0,
                            KmYear = 0,
                            LastLogin = 0,
                            Nick = "Adam137",
                            PassengersCarried = 0,
                            PlayTime = 0,
                            PointsGained = 0,
                            ServisSpending = 0f
                        },
                        new
                        {
                            Id = new Guid("f6b37307-400a-4348-bd01-933cdb15753a"),
                            Cng = 0f,
                            Fuel = 0f,
                            GameMoney = 0,
                            KmOverall = 0,
                            KmYear = 0,
                            LastLogin = 0,
                            Nick = "Tomas",
                            PassengersCarried = 0,
                            PlayTime = 0,
                            PointsGained = 0,
                            ServisSpending = 0f
                        });
                });

            modelBuilder.Entity("Simt.DAL.entities.ServiceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvgAhead")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvgDelay")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameMoneyGained")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LineId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengersCarried")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ab60b15-2d55-4a22-a7f9-aa4fd538c818"),
                            AvgAhead = 0,
                            AvgDelay = 0,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameMoneyGained = 0,
                            LineId = new Guid("5379bcb7-31e9-4793-9d0d-7a19dd3ad670"),
                            PassengersCarried = 0,
                            PlayerId = new Guid("e7dafd70-b9cb-445c-a7d5-d8443b95f9d2"),
                            VehicleId = new Guid("52ab6fd3-ffbe-4b16-8699-da2f189a0117")
                        });
                });

            modelBuilder.Entity("Simt.DAL.entities.VehicleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameVersion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("GoldVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Line")
                        .HasColumnType("TEXT");

                    b.Property<int>("LowFloor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Scin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SizeB")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Traction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52ab6fd3-ffbe-4b16-8699-da2f189a0117"),
                            GoldVersion = true,
                            LowFloor = 0,
                            Manufacturer = "Tatra",
                            Operator = "Dopravní Podnik hl.m. Prahy",
                            Scin = "1044-0012",
                            SizeB = "1.6.99-2159 1.7.100-2159",
                            Status = 0,
                            Traction = 1,
                            Type = "T3R.P",
                            VehicleNumber = "8361"
                        });
                });

            modelBuilder.Entity("Simt.DAL.entities.ServiceEntity", b =>
                {
                    b.HasOne("Simt.DAL.entities.LineEntity", "Line")
                        .WithMany("Services")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simt.DAL.entities.PlayerEntity", "Player")
                        .WithMany("Services")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simt.DAL.entities.VehicleEntity", "Vehicle")
                        .WithMany("Services")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("Player");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Simt.DAL.entities.LineEntity", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Simt.DAL.entities.PlayerEntity", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Simt.DAL.entities.VehicleEntity", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
